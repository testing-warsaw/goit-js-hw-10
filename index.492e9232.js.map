{"mappings":"AACA,MAAMA,EAAYC,SAASC,cAAc,eACnCC,EAAcF,SAASC,cAAc,iBACrCE,EAAcH,SAASC,cAAc,iBAI3C,IAAIG,EAAc,GAGlBL,EAAUM,iBAAiB,SAAS,WAClCD,EAAcL,EAAUO,MAOtBC,MAFa,uCAAmBH,KAG/BI,MAAMC,IACH,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MAAM,IAEvBL,MAAMM,KASX,SAAyBC,GACvBb,EAAYc,UAAY,GACxBb,EAAYa,UAAY,GAExB,MAAMC,EAASF,EAAUG,KAAKC,GACnB,wCACkBA,EAAQC,KAAKC,gDACbF,EAAQG,kDACLH,EAAQI,+CACdJ,EAAQK,MAAMC,8CACRN,EAAQO,iCAErCC,KAAK,IACRzB,EAAY0B,mBAAmB,cAAeX,E,CArB1CY,CAAgBf,EAAK,IAEtBgB,OAAOC,IACNC,QAAQD,MAAM,kCAAmCA,EAAM,G","sources":["src/index.js"],"sourcesContent":["\nconst searchBox = document.querySelector(\"#search-box\")\nconst countryList = document.querySelector(\".country-list\")\nconst countryInfo = document.querySelector(\".country-info\")\n\n\n\nlet findCountry = \"\"\nconst baseUrl = \"https://restcountries.com/v3.1\"\n\nsearchBox.addEventListener(\"input\", function() {\n  findCountry = searchBox.value\n  fetchCountries(findCountry)\n})\n\nfunction fetchCountries() {\n  const apiUrl = `${baseUrl}/name/${findCountry}`\n\n    fetch(apiUrl)\n    .then((response) => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n        return response.json()\n      })\n      .then((data) => {\n        renderCountries(data)\n      })\n      .catch((error) => {\n        console.error(\"Błąd podczas pobierania danych:\", error)\n\n      })\n  }\n\n  function renderCountries(countries) {\n    countryList.innerHTML = \"\"\n    countryInfo.innerHTML = \"\"\n    \n    const marcup = countries.map((country) => {\n        return `<li>\n            <p><b>Country</b>: ${country.name.official}</p>\n            <p><b>Capital</b>: ${country.capital}</p>\n            <p><b>Population</b>: ${country.population}</p>\n            <p><b>Flag</b>: ${country.flags.svg}</p>\n            <p><b>Languages </b>: ${country.languages}</p>\n        </li>`\n    }).join(\"\")\n    countryList.insertAdjacentHTML(\"beforebegin\", marcup)\n}"],"names":["$1f0dc3b9307be026$var$searchBox","document","querySelector","$1f0dc3b9307be026$var$countryList","$1f0dc3b9307be026$var$countryInfo","$1f0dc3b9307be026$var$findCountry","addEventListener","value","fetch","then","response","ok","Error","status","json","data","countries","innerHTML","marcup","map","country","name","official","capital","population","flags","svg","languages","join","insertAdjacentHTML","$1f0dc3b9307be026$var$renderCountries","catch","error","console"],"version":3,"file":"index.492e9232.js.map"}